#Application configuration
app:
  #Config for customer requirements
  customer:
    #Information of the parking site (to associate data with). site_key is the password to authenticate
    
    #
    # Use the following to retrieve the information from the environment variables
    # site_id: !env SITE_ID    #Load id from environment variable
    # site_key: !env SITE_KEY  #Load key from environment variable
    #
    site_id: 0
    site_key: secret
    
    #All connected cameras
    cameras:
      - webcam:
          src: 0

      - camera1:
          #Hint at what type of camera it is
          kind: ipcamera

          src: rtsp://admin:@192.168.0.20:80/ch0_0.264

          protocol: rtsp
          authentication:
            username: admin
            password: 
          stream_path: /ch0_0.264

      - prerecorded: &primary_camera
          #Hint at what type of camera is being pointed
          kind: media
          #Which camera device to use (index, path or url of stream)
          src: 0 #"media/car_park.mp4"
          skip_frames: 420
          throttle_fps: 30

  api:
    api_base: http://localhost:5000/
    ws_base: ws://localhost:5000/

  #Task configuration
  tasks:
    camera_source:
      type: CameraSource
      properties:
        <<: *primary_camera

    vehicle_tracker:
      type: ObjectTracker
      properties:
        input_source: camera_source
        output: vidstream_main
        #How many frames to pass to tracker per second
        update_rate: 30

        #ROI tracker configuration
        tracker:
          # Check out the motrackers library to find out which trackers are supported
          type: SORT
          max_lost: 30
          iou_threshold: 0.6
          #Steady update rate
          update_rate: 30
        
    #Sends detections found in the video input to the tracker
    vehicle_detector:
      type: RemoteObjectDetector
      properties:
        input_source: camera_source
        model: vehicle_yolov5
        output: vehicle_tracker
        process_size: 240
        img_format: .png

    #RTC stream tracks
    vidstream_main:
      type: RTCStreamTrack

  #Management web server
  management:
    

#Logging configuration
logger:
  version: 1
  root:
    level: INFO
    handlers:
      #- log_file
      - console
  handlers:
    log_file:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: preciselog
      filename: vehiclebot.log
      maxBytes: 10485760
      backupCount: 3
    console:
      class: logging.StreamHandler
      formatter: colorful
      level: DEBUG
      stream: ext://sys.stdout
  formatters:
    preciselog:
      format: '%(asctime)s [%(levelname)s] [%(name)s] (%(filename)s:%(lineno)d) %(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
    colorful:
      (): vehiclebot.log.ColorfulFormatter
      apply_color_sequence: true
